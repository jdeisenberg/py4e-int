<?xml version="1.0"?>
<section xml:id="conditional_alternative-execution">
  <title>Alternative execution</title>
    <idx>Alternative Execution</idx>
    <idx><h>Keyword</h><h>Else</h></idx>
    <idx><h>Else</h><h>Keyword</h></idx>
    <idx>Branch</idx>
  <p>A second form of the <c>if</c> statement is <em>alternative
                execution</em>, in which there are two possibilities and the
            condition determines which one gets executed. The syntax looks like
            this:</p>
  <program xml:id="cndtnlMod" interactive="codelens" language="python">
    <input>
x = 8
if x % 2 == 0 :
    print('x is even')
else :
    print('x is odd')
print('All done.')
    </input>
  </program>
  <p>If the remainder when <c>x</c> is divided by 2 is 0, then we know
            that <c>x</c> is even, and the program displays a message to that
            effect. If the condition is false, the second set of statements is
            executed.</p>
  <image source="images/if-else.svg" width="50%" alt="If-Then-Else Logic"/>
  <p>Since the condition must either be true or false, exactly one of the
            alternatives will be executed. The alternatives are called <em>branches</em>,
            because they are branches in the flow of execution.</p>
  <exercise label="cndtnl-altex-mc-print">
    <statement>
      <p>Q-2: What does the following code print?</p>
      <program language="python">
        <input>
if 4 + 5 == 10:
    print("TRUE")
else:
    print("FALSE")
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>TRUE</p>
        </statement>
        <feedback>
          <p>TRUE is printed by the if-block, which only executes if the conditional (in this case, 4+5 == 10) is true.  In this case 5+4 is not equal to 10.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>FALSE</p>
        </statement>
        <feedback>
          <p>Since 4+5==10 evaluates to False, Python will skip over the if block and execute the statement in the else block.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>TRUE on one line and FALSE on the next</p>
        </statement>
        <feedback>
          <p>Python would never print both TRUE and FALSE because it will only execute one of the if-block or the else-block, but not both.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Nothing will be printed</p>
        </statement>
        <feedback>
          <p>Python will always execute either the if-block (if the condition is true) or the else-block (if the condition is false).  It would never skip over both blocks.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="cndtnl-altex-mc-negative">
    <statement>
      <p>Q-3: What does the following code print?</p>
      <program language="python">
        <input>
x = -10
if x &lt; 0:
    print("The negative number ",  x, " is not valid here.")
print("This is always printed")
</input>
      </program>
      <pre>a.
This is always printed

b.
The negative number -10 is not valid here
This is always printed

c.
The negative number -10 is not valid here</pre>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>Output a</p>
        </statement>
        <feedback>
          <p>Because -10 is less than 0, Python will execute the body of the if-statement here.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>Output b</p>
        </statement>
        <feedback>
          <p>Python executes the body of the if-block as well as the statement that follows the if-block.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Output c</p>
        </statement>
        <feedback>
          <p>Python will also execute the statement that follows the if-block (because it is not enclosed in an else-block, but rather just a normal statement).</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>It will cause an error because every if must have an else clause.</p>
        </statement>
        <feedback>
          <p>It is valid to have an if-block without a corresponding else-block (though you cannot have an else-block without a corresponding if-block).</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="cndtnl-altex-mc-error">
    <statement>
      <p>Q-4: Will the following code cause an error?</p>
      <program language="python">
        <input>
x = -10
if x &lt; 0:
    print("The negative number ",  x, " is not valid here.")
else:
    print(x, " is a positive number")
else:
    print("This is always printed")
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>No</p>
        </statement>
        <feedback>
          <p>Every else-block must have exactly one corresponding if-block.  If you want to chain if-else statements together, you must use the else if construct, described in the chained conditionals section.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>Yes</p>
        </statement>
        <feedback>
          <p>This will cause an error because the second else-block is not attached to a corresponding if-block.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="cndtnl-altex-pp-even" numbered="yes" adaptive="yes" indentation="show" language="python">
    <statement>
      <p>The following program should print out <q>x is even</q> if the remainder of x divided by 2 is 0 and <q>x is odd</q>
            otherwise, but the code is mixed up. Be sure to indent correctly!</p>
    </statement>
    <blocks>
      <block order="5">
        <cline>x = 92</cline>
      </block>
      <block order="2">
        <cline>if x % 2 == 0:</cline>
      </block>
      <block order="1">
        <cline>    print("x is even")</cline>
      </block>
      <block order="4">
        <cline>else:</cline>
      </block>
      <block order="3">
        <cline>    print("x is odd")</cline>
      </block>
    </blocks>
  </exercise>
</section>
